// Mocks generated by Mockito 5.0.17 from annotations
// in pretend/test/data/repositories/settings_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:pretend/data/data_sources/settings_local_datasource.dart'
    as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [SettingsLocalDatasourceContract].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingsLocalDatasourceContract extends _i1.Mock
    implements _i2.SettingsLocalDatasourceContract {
  MockSettingsLocalDatasourceContract() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<Map<String, dynamic>> getAppSettings() => (super.noSuchMethod(
          Invocation.method(#getAppSettings, []),
          returnValue: Future<Map<String, dynamic>>.value(<String, dynamic>{}))
      as _i3.Future<Map<String, dynamic>>);
  @override
  _i3.Future<void> setFirstTimeFlag(bool? flag) =>
      (super.noSuchMethod(Invocation.method(#setFirstTimeFlag, [flag]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> setThemeColor(int? color) =>
      (super.noSuchMethod(Invocation.method(#setThemeColor, [color]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> setNotificationStatus(bool? flag) =>
      (super.noSuchMethod(Invocation.method(#setNotificationStatus, [flag]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
}
