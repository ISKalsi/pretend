// Mocks generated by Mockito 5.0.15 from annotations
// in pretend/test/application/bloc/home/settings/settings_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:core/error.dart' as _i6;
import 'package:core/usecase.dart' as _i8;
import 'package:pretend/domain/entities/app_settings.dart' as _i7;
import 'package:pretend/domain/repositories/settings_repository_contract.dart'
    as _i2;
import 'package:pretend/domain/usecases/get_app_settings.dart' as _i4;
import 'package:pretend/domain/usecases/mark_app_visited_first_time.dart'
    as _i9;
import 'package:pretend/domain/usecases/set_app_theme_color.dart' as _i10;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeSettingsRepositoryContract_0 extends _i1.Fake
    implements _i2.SettingsRepositoryContract {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

/// A class which mocks [GetAppSettings].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAppSettings extends _i1.Mock implements _i4.GetAppSettings {
  MockGetAppSettings() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SettingsRepositoryContract get repo =>
      (super.noSuchMethod(Invocation.getter(#repo),
              returnValue: _FakeSettingsRepositoryContract_0())
          as _i2.SettingsRepositoryContract);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.AppSettings>> call(
          _i8.NoParams? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
          returnValue: Future<_i3.Either<_i6.Failure, _i7.AppSettings>>.value(
              _FakeEither_1<_i6.Failure, _i7.AppSettings>())) as _i5
          .Future<_i3.Either<_i6.Failure, _i7.AppSettings>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [MarkAppVisitedFirstTime].
///
/// See the documentation for Mockito's code generation for more information.
class MockMarkAppVisitedFirstTime extends _i1.Mock
    implements _i9.MarkAppVisitedFirstTime {
  MockMarkAppVisitedFirstTime() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SettingsRepositoryContract get repo =>
      (super.noSuchMethod(Invocation.getter(#repo),
              returnValue: _FakeSettingsRepositoryContract_0())
          as _i2.SettingsRepositoryContract);
  @override
  _i5.Future<_i3.Either<_i6.Failure, void>> call(
          _i9.MarkAppVisitedFirstTimeParams? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
              returnValue: Future<_i3.Either<_i6.Failure, void>>.value(
                  _FakeEither_1<_i6.Failure, void>()))
          as _i5.Future<_i3.Either<_i6.Failure, void>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [SetAppThemeColor].
///
/// See the documentation for Mockito's code generation for more information.
class MockSetAppThemeColor extends _i1.Mock implements _i10.SetAppThemeColor {
  MockSetAppThemeColor() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SettingsRepositoryContract get repo =>
      (super.noSuchMethod(Invocation.getter(#repo),
              returnValue: _FakeSettingsRepositoryContract_0())
          as _i2.SettingsRepositoryContract);
  @override
  _i5.Future<_i3.Either<_i6.Failure, void>> call(
          _i10.SetAppThemeColorParams? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
              returnValue: Future<_i3.Either<_i6.Failure, void>>.value(
                  _FakeEither_1<_i6.Failure, void>()))
          as _i5.Future<_i3.Either<_i6.Failure, void>>);
  @override
  String toString() => super.toString();
}
