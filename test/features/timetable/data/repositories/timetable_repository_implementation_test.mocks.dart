// Mocks generated by Mockito 5.0.15 from annotations
// in pretend/test/features/timetable/data/repositories/timetable_repository_implementation_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:pretend/core/network/network_info.dart' as _i6;
import 'package:pretend/features/timetable/data/data_sources/timetable_local_datasource.dart'
    as _i2;
import 'package:pretend/features/timetable/data/data_sources/timetable_remote_datasource.dart'
    as _i5;
import 'package:pretend/features/timetable/data/models/subject_model.dart'
    as _i4;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [TimetableLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTimetableLocalDataSource extends _i1.Mock
    implements _i2.TimetableLocalDataSource {
  MockTimetableLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.SubjectModel>> getSubjects() =>
      (super.noSuchMethod(Invocation.method(#getSubjects, []),
              returnValue:
                  Future<List<_i4.SubjectModel>>.value(<_i4.SubjectModel>[]))
          as _i3.Future<List<_i4.SubjectModel>>);
  @override
  _i3.Future<void> clearSubjects() =>
      (super.noSuchMethod(Invocation.method(#clearDatabase, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> addSubjects(List<_i4.SubjectModel>? subjects) =>
      (super.noSuchMethod(Invocation.method(#addSubjects, [subjects]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> addSubject(_i4.SubjectModel? subjects) =>
      (super.noSuchMethod(Invocation.method(#addSubject, [subjects]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [TimetableRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTimetableRemoteDataSource extends _i1.Mock
    implements _i5.TimetableRemoteDataSource {
  MockTimetableRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.SubjectModel>> getSubjects() =>
      (super.noSuchMethod(Invocation.method(#getSubjects, []),
              returnValue:
                  Future<List<_i4.SubjectModel>>.value(<_i4.SubjectModel>[]))
          as _i3.Future<List<_i4.SubjectModel>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i6.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  String toString() => super.toString();
}
